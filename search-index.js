var searchIndex = new Map(JSON.parse('[\
["mistralrs",{"doc":"","t":"PKPPPPFFPPFFKFFFFFGPFPKPPFGFGPGGPPPMNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMONONNMNNNNNMOOOOOOOOOMOOONNNNNNNMMOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNN","n":["CacheToken","Conversation","Done","EnvVar","Error","Fixed","GemmaLoader","GemmaSpecificConfig","Ids","Literal","LlamaLoader","LlamaSpecificConfig","Loader","MistralLoader","MistralRs","MistralSpecificConfig","MixtralLoader","MixtralSpecificConfig","ModelKind","Normal","Ordering","Path","Pipeline","QuantizedGGML","QuantizedGGUF","Request","Response","SamplingParams","SchedulerMethod","Seqs","StopTokens","TokenSource","XLoraGGML","XLoraGGUF","XLoraNormal","_setup_model","_setup_model","_setup_model","_setup_model","_setup_model","adapters","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","device","download_model","download_model","download_model","download_model","download_model","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eos_tok","fmt","fmt","fmt","fmt","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_max_seq_len","get_prompt","get_sender","gqa","has_no_kv_cache","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_xlora","layers","load_model","max_len","maybe_log_request","maybe_log_response","name","new","new","new","new","new","num_hidden_layers","presence_penalty","prompt","repeat_last_n","repeat_last_n","repeat_last_n","repeat_last_n","repeat_penalty","response","return_logprobs","sample","sampling_params","stop_toks","temperature","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tokenize_prompt","tokenizer","top_k","top_n_logprobs","top_p","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_flash_attn","use_flash_attn","use_flash_attn","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"mistralrs"],[319,"mistralrs_core::pipeline"],[320,"candle_core::dtype"],[321,"core::option"],[322,"candle_core::device"],[323,"std::sync::mutex"],[324,"alloc::boxed"],[325,"alloc::sync"],[326,"anyhow"],[327,"core::result"],[328,"mistralrs_core::models"],[329,"serde::de"],[330,"alloc::string"],[331,"core::fmt"],[332,"core::fmt"],[333,"core::cell"],[334,"alloc::rc"],[335,"candle_core::tensor"],[336,"std::collections::hash::map"],[337,"alloc::vec"],[338,"std::sync::mpsc"],[339,"mistralrs_core::response"],[340,"candle_sampling::logits_processor"],[341,"tokenizers::tokenizer"],[342,"core::any"]],"d":["","Define a method to implement specific conversation …","","","","","","","","","","","Encapsulate downloading and setting up the model. The …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","If <code>revision</code> is None, then it defaults to <code>main</code>. If <code>dtype</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[29,0,51,29,51,47,0,0,24,29,0,0,0,0,0,0,0,0,0,46,0,29,0,46,46,0,0,0,0,24,0,0,46,46,46,1,14,15,16,17,19,19,14,15,16,17,29,46,33,51,47,42,20,21,22,23,24,25,19,14,15,16,17,29,46,33,51,47,42,20,21,22,23,24,25,6,19,20,21,22,23,24,25,19,20,21,22,23,24,25,19,14,15,16,17,29,46,33,51,47,42,20,21,22,23,24,25,19,14,15,16,17,29,46,33,51,47,42,20,21,22,23,24,25,19,6,1,14,15,16,17,19,14,15,16,17,29,46,33,51,47,42,20,21,22,23,24,25,6,19,33,24,25,6,19,14,15,16,17,29,46,33,51,47,42,20,21,22,23,24,25,6,9,42,21,6,19,14,15,16,17,29,46,33,51,47,42,20,21,22,23,24,25,19,14,15,16,17,29,46,33,51,47,42,20,21,22,23,24,25,6,19,1,25,42,42,6,14,15,16,17,42,6,25,33,20,21,22,23,25,33,33,6,33,25,25,19,20,21,22,23,24,25,6,6,25,25,25,19,14,15,16,17,29,46,33,51,47,42,20,21,22,23,24,25,19,14,15,16,17,29,46,33,51,47,42,20,21,22,23,24,25,19,14,15,16,17,29,46,33,51,47,42,20,21,22,23,24,25,21,22,23,19,14,15,16,17,29,46,33,51,47,42,20,21,22,23,24,25],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,[4,[3]],5],[[13,[[11,[[8,[[7,[6]]]],[10,[9]]]],12]]]],[[14,2,[4,[3]],5],[[13,[[11,[[8,[[7,[6]]]],[10,[9]]]],12]]]],[[15,2,[4,[3]],5],[[13,[[11,[[8,[[7,[6]]]],[10,[9]]]],12]]]],[[16,2,[4,[3]],5],[[13,[[11,[[8,[[7,[6]]]],[10,[9]]]],12]]]],[[17,2,[4,[3]],5],[[13,[[11,[[8,[[7,[6]]]],[10,[9]]]],12]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[-1,[[13,[19]]],27],[6,5],[[1,[4,[28]],29],[[13,[[8,[2]],12]]]],[[14,[4,[28]],29],[[13,[[8,[2]],12]]]],[[15,[4,[28]],29],[[13,[[8,[2]],12]]]],[[16,[4,[28]],29],[[13,[[8,[2]],12]]]],[[17,[4,[28]],29],[[13,[[8,[2]],12]]]],[26,11],[26,11],[26,11],[26,11],[26,11],[26,11],[26,11],[26,11],[26,11],[26,11],[26,11],[26,11],[26,11],[26,11],[26,11],[26,11],[26,11],[6,30],[[19,31],[[13,[11,32]]]],[[33,31],[[13,[11,32]]]],[[24,31],[[13,[11,32]]]],[[25,31],[[13,[11,32]]]],[[6,[8,[[37,[[36,[[35,[34]]]]]]]],38],39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,26],[[9,[41,[[40,[28,28]]]],38],[[13,[28,28]]]],[42,[[43,[33]]]],0,[6,38],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,38],0,[[1,[4,[28]],29,[4,[3]],5],[[13,[[11,[[8,[[7,[6]]]],[10,[9]]]],12]]]],0,[[[10,[42]],28],11],[[[10,[42]],44],11],[6,45],[[28,20,[4,[28]],[4,[28]],[4,[28]],46,[4,[19]],38],14],[[28,21,[4,[28]],[4,[28]],[4,[28]],46,[4,[19]],38],15],[[28,22,[4,[28]],[4,[28]],[4,[28]],46,[4,[19]],38],16],[[28,23,[4,[28]],[4,[28]],[4,[28]],46,[4,[19]],38],17],[[[8,[[7,[6]]]],47,[4,[28]],38,38],[[10,[42]]]],[6,26],0,0,0,0,0,0,0,0,0,[[6,39,[36,[[35,[34]]]]],[[13,[48,12]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,45],[[13,[[41,[30]],12]]]],[6,49],0,0,0,[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[10,"Loader",0],[10,"ModelPaths",319],[6,"DType",320],[6,"Option",321],[6,"Device",322],[10,"Pipeline",0],[5,"Mutex",323],[5,"Box",324],[10,"Conversation",0],[5,"Arc",325],[1,"tuple"],[5,"Error",326],[6,"Result",327],[5,"GemmaLoader",0],[5,"LlamaLoader",0],[5,"MistralLoader",0],[5,"MixtralLoader",0],[5,"Cache",328],[5,"Ordering",0],[5,"GemmaSpecificConfig",0],[5,"LlamaSpecificConfig",0],[5,"MistralSpecificConfig",0],[5,"MixtralSpecificConfig",0],[6,"StopTokens",0],[5,"SamplingParams",0],[1,"usize"],[10,"Deserializer",329],[5,"String",330],[6,"TokenSource",0],[1,"u32"],[5,"Formatter",331],[5,"Error",331],[5,"Request",0],[5,"Sequence",332],[5,"RefCell",333],[5,"Rc",334],[1,"slice"],[1,"bool"],[5,"Tensor",335],[5,"HashMap",336],[5,"Vec",337],[5,"MistralRs",0],[5,"Sender",338],[5,"ChatCompletionResponse",339],[1,"str"],[6,"ModelKind",0],[6,"SchedulerMethod",0],[5,"Logprobs",340],[5,"Tokenizer",341],[5,"TypeId",342],[6,"Response",0]],"b":[]}],\
["mistralrs_core",{"doc":"","t":"PFFKPPPPFFPPFFKFFFFFGPFPKPPFGFGPGGPPPMNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQQNMMNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNMQMNOQQMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMONNONNOMNNNNNMOOOOOOOOOOOOMONNOOONNNNNNNNNMMOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNN","n":["CacheToken","ChatCompletionResponse","ChatCompletionUsage","Conversation","Done","EnvVar","Error","Fixed","GemmaLoader","GemmaSpecificConfig","Ids","Literal","LlamaLoader","LlamaSpecificConfig","Loader","MistralLoader","MistralRs","MistralSpecificConfig","MixtralLoader","MixtralSpecificConfig","ModelKind","Normal","Ordering","Path","Pipeline","QuantizedGGML","QuantizedGGUF","Request","Response","SamplingParams","SchedulerMethod","Seqs","StopTokens","TokenSource","XLoraGGML","XLoraGGUF","XLoraNormal","_setup_model","_setup_model","_setup_model","_setup_model","_setup_model","adapters","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","choices","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compl_tok_per_sec","completion_tokens","created","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut_refcell","deref_refcell","deserialize","device","download_model","download_model","download_model","download_model","download_model","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eos_tok","fmt","fmt","fmt","fmt","fmt","fmt","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_max_seq_len","get_mut_arcmutex","get_prompt","get_sender","gqa","handle_seq_error","handle_seq_error_stateaware","has_no_kv_cache","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_xlora","layers","load_model","load_model","max_len","maybe_log_request","maybe_log_response","model","name","new","new","new","new","new","num_hidden_layers","object","presence_penalty","prompt","prompt_tok_per_sec","prompt_tokens","repeat_last_n","repeat_last_n","repeat_last_n","repeat_last_n","repeat_penalty","response","return_logprobs","sample","sampling_params","serialize","serialize","stop_toks","system_fingerprint","temperature","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tokenize_prompt","tokenizer","top_k","top_n_logprobs","top_p","total_tok_per_sec","total_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","usage","use_flash_attn","use_flash_attn","use_flash_attn","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"mistralrs_core"],[374,"candle_core::dtype"],[375,"core::option"],[376,"candle_core::device"],[377,"std::sync::mutex"],[378,"alloc::boxed"],[379,"alloc::sync"],[380,"anyhow"],[381,"core::result"],[382,"serde::de"],[383,"alloc::string"],[384,"core::fmt"],[385,"core::fmt"],[386,"alloc::rc"],[387,"candle_core::tensor"],[388,"std::collections::hash::map"],[389,"alloc::vec"],[390,"std::sync::mpsc"],[391,"candle_sampling::logits_processor"],[392,"serde::ser"],[393,"tokenizers::tokenizer"],[394,"core::any"]],"d":["","","","Define a method to implement specific conversation …","","","","","","","","","","","Encapsulate downloading and setting up the model. The …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","If <code>revision</code> is None, then it defaults to <code>main</code>. If <code>dtype</code> is …","If <code>revision</code> is None, then it defaults to <code>main</code>. If <code>dtype</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[29,0,0,0,51,29,51,46,0,0,23,29,0,0,0,0,0,0,0,0,0,45,0,29,0,45,45,0,0,0,0,23,0,0,45,45,45,1,12,13,14,15,16,16,12,13,14,15,29,45,33,51,46,42,17,18,19,20,21,22,23,24,16,12,13,14,15,29,45,33,51,46,42,17,18,19,20,21,22,23,24,5,22,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,21,21,22,16,12,13,14,15,29,45,33,51,46,42,17,18,19,20,21,22,23,24,16,12,13,14,15,29,45,33,51,46,42,17,18,19,20,21,22,23,24,0,0,16,5,1,12,13,14,15,16,12,13,14,15,29,45,33,51,46,42,17,18,19,20,21,22,23,24,5,16,33,21,22,23,24,5,16,12,13,14,15,29,45,33,51,46,42,17,18,19,20,21,22,23,24,5,0,8,42,18,0,0,5,22,16,12,13,14,15,29,45,33,51,46,42,17,18,19,20,21,22,23,24,16,12,13,14,15,29,45,33,51,46,42,17,18,19,20,21,22,23,24,5,16,1,1,24,42,42,22,5,12,13,14,15,42,5,22,24,33,21,21,17,18,19,20,24,33,33,5,33,21,22,24,22,24,16,17,18,19,20,21,22,23,24,5,5,24,24,24,21,21,16,12,13,14,15,29,45,33,51,46,42,17,18,19,20,21,22,23,24,16,12,13,14,15,29,45,33,51,46,42,17,18,19,20,21,22,23,24,16,12,13,14,15,29,45,33,51,46,42,17,18,19,20,21,22,23,24,22,18,19,20,16,12,13,14,15,29,45,33,51,46,42,17,18,19,20,21,22,23,24],"fc":[],"p":[[10,"Loader",0],[6,"DType",374],[6,"Option",375],[6,"Device",376],[10,"Pipeline",0],[5,"Mutex",377],[5,"Box",378],[10,"Conversation",0],[5,"Arc",379],[1,"tuple"],[8,"Result",380],[5,"GemmaLoader",0],[5,"LlamaLoader",0],[5,"MistralLoader",0],[5,"MixtralLoader",0],[5,"Ordering",0],[5,"GemmaSpecificConfig",0],[5,"LlamaSpecificConfig",0],[5,"MistralSpecificConfig",0],[5,"MixtralSpecificConfig",0],[5,"ChatCompletionUsage",0],[5,"ChatCompletionResponse",0],[6,"StopTokens",0],[5,"SamplingParams",0],[1,"usize"],[6,"Result",381],[10,"Deserializer",382],[5,"String",383],[6,"TokenSource",0],[1,"u32"],[5,"Formatter",384],[5,"Error",384],[5,"Request",0],[8,"Result",384],[5,"RefCell",385],[5,"Rc",386],[1,"slice"],[1,"bool"],[5,"Tensor",387],[5,"HashMap",388],[5,"Vec",389],[5,"MistralRs",0],[5,"Sender",390],[1,"str"],[6,"ModelKind",0],[6,"SchedulerMethod",0],[5,"Logprobs",391],[10,"Serializer",392],[5,"Tokenizer",393],[5,"TypeId",394],[6,"Response",0]],"b":[]}],\
["mistralrs_lora",{"doc":"","t":"KFFFFOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNOHHHMNNNNMNNNNNNNNNNNNNNNNNNNNMN","n":["LinearLayerLike","LoraConfig","LoraLinearConfig","Ordering","QLoraLinear","adapters","bias","bias","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","get_lora_cfg","init","init","init","init","into","into","into","into","layers","linear","linear_b","linear_no_bias","lora_forward","lora_forward","new","new","new","shape","shape","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","weight","weight"],"q":[[0,"mistralrs_lora"],[85,"candle_core::tensor"],[86,"core::option"],[87,"core::result"],[88,"serde::de"],[89,"core::fmt"],[90,"core::fmt"],[91,"candle_nn::var_builder"],[92,"alloc::string"],[93,"alloc::vec"],[94,"alloc::sync"],[95,"candle_core::error"],[96,"candle_core::quantized"],[97,"candle_core::shape"],[98,"core::any"]],"d":["Any layer that is linear-like.","","Configuration for LoraLinear","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,5,1,4,4,5,6,7,4,5,6,7,5,6,7,5,6,7,4,5,6,7,4,5,6,7,5,7,4,5,6,7,4,5,6,7,4,5,6,7,0,4,5,6,7,4,5,6,7,5,0,0,0,1,4,4,6,7,1,4,5,6,7,4,5,6,7,4,5,6,7,4,5,6,7,4,5,6,7,1,4],"f":[0,0,0,0,0,0,[1,[[3,[2]]]],[4,[[3,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,5],[6,6],[7,7],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[-1,[[10,[5]]],11],[-1,[[10,[7]]],11],[9,8],[9,8],[9,8],[9,8],[[4,12],13],[[5,12],13],[[6,12],13],[[7,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[14,6],[[],9],[[],9],[[],9],[[],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[9,9,15,[17,[[8,[16,7]]]],9,5],[[19,[[18,[1]]]]]],[[9,9,20,15,[17,[[8,[16,7]]]],9,5],[[19,[[18,[1]]]]]],[[9,9,15,[17,[[8,[16,7]]]],9,5],[[19,[[18,[1]]]]]],[[1,2,2,21],[[19,[2]]]],[[4,2,2,21],[[19,[2]]]],[[22,6,[23,[[8,[16,7]]]],15,5,16,9],[[19,[4]]]],[[9,9],6],[[9,21,[3,[24]],[25,[16]]],7],[1,26],[4,26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[4,2]],"c":[],"p":[[10,"LinearLayerLike",0],[5,"Tensor",85],[6,"Option",86],[5,"QLoraLinear",0],[5,"Ordering",0],[5,"LoraLinearConfig",0],[5,"LoraConfig",0],[1,"tuple"],[1,"usize"],[6,"Result",87],[10,"Deserializer",88],[5,"Formatter",89],[8,"Result",89],[5,"QTensor",90],[8,"VarBuilder",91],[5,"String",92],[5,"Vec",93],[5,"Arc",94],[8,"Result",95],[1,"bool"],[1,"f64"],[6,"QMatMul",90],[1,"slice"],[1,"f32"],[5,"HashSet",96],[5,"Shape",97],[5,"TypeId",98]],"b":[]}],\
["mistralrs_server",{"doc":"","t":"FPPPPPPPPGPPPPPPPPNNNNNNNNHNNNNNNNNNNNNNNNHNNNNNNOHOOOCOONNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFFPPPPGNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOONNNOONNNOOONNNNNNNNNNNN","n":["Args","Gemma","Llama","LlamaGGML","LlamaGGUF","Mistral","MistralGGUF","Mixtral","MixtralGGUF","ModelSelected","XLoraGemma","XLoraLlama","XLoraLlamaGGML","XLoraLlamaGGUF","XLoraMistral","XLoraMistralGGUF","XLoraMixtral","XLoraMixtralGGUF","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","chatcompletions","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_router","group_id","has_subcommand","init","init","into","into","log","main","max_seqs","model","no_kv_cache","openai","port","truncate_sequence","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","gqa","gqa","model_id","model_id","model_id","model_id","model_id","model_id","model_id","model_id","order","order","order","order","order","order","order","order","quantized_filename","quantized_filename","quantized_filename","quantized_filename","quantized_filename","quantized_filename","quantized_filename","quantized_filename","quantized_model_id","quantized_model_id","quantized_model_id","quantized_model_id","quantized_model_id","quantized_model_id","quantized_model_id","quantized_model_id","repeat_last_n","repeat_last_n","repeat_last_n","repeat_last_n","repeat_last_n","repeat_last_n","repeat_last_n","repeat_last_n","repeat_last_n","repeat_last_n","repeat_last_n","repeat_last_n","repeat_last_n","repeat_last_n","repeat_last_n","repeat_last_n","tok_model_id","tok_model_id","tok_model_id","tok_model_id","tok_model_id","tok_model_id","tok_model_id","tok_model_id","xlora_model_id","xlora_model_id","xlora_model_id","xlora_model_id","xlora_model_id","xlora_model_id","xlora_model_id","xlora_model_id","ChatCompletionRequest","Message","Multi","MultiId","Single","SingleId","StopTokens","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","content","default_1usize","default_false","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","init","init","init","into","into","into","logit_bias","logprobs","max_tokens","messages","model","n_choices","name","presence_penalty","repetition_penalty","role","serialize","serialize","serialize","stop_seqs","temperature","to_owned","to_owned","to_owned","top_k","top_logprobs","top_p","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"mistralrs_server"],[69,"mistralrs_server::ModelSelected"],[135,"mistralrs_server::openai"],[217,"clap_builder::builder::command"],[218,"mistralrs_core"],[219,"alloc::sync"],[220,"mistralrs_core::pipeline"],[221,"axum::extract::state"],[222,"axum::json"],[223,"alloc::string"],[224,"core::fmt"],[225,"core::fmt"],[226,"clap_builder"],[227,"core::result"],[228,"axum::routing"],[229,"clap_builder::util::id"],[230,"core::option"],[231,"anyhow"],[232,"core::any"],[233,"serde::de"],[234,"serde::ser"]],"d":["","Select the gemma model.","Select the llama model.","Select the quantized llama model with gguf.","Select the quantized llama model with gguf.","Select the mistral model.","Select the quantized mistral model with gguf.","Select the mixtral model.","Select the quantized mixtral model with gguf.","","Select the gemma model, with X-LoRA.","Select the llama model, with X-LoRA.","Select the quantized mistral model with gguf and X-LoRA.","Select the quantized mistral model with gguf and X-LoRA.","Select the mistral model, with X-LoRA.","Select the quantized mistral model with gguf and X-LoRA.","Select the mixtral model, with X-LoRA.","Select the quantized mistral model with gguf and X-LoRA.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Log all responses and requests to this file","","Maximum running sequences at any time","Model","Use no KV cache.","","Port to serve on.","If a sequence is larger than the maximum model length, …","","","","","","","","","","","","","GQA","GQA","Model ID to load from","Model ID to load from","Model ID to load from","Model ID to load from","Model ID to load from","Model ID to load from","Model ID to load from","Model ID to load from","Ordering JSON file","Ordering JSON file","Ordering JSON file","Ordering JSON file","Ordering JSON file","Ordering JSON file","Ordering JSON file","Ordering JSON file","Quantized filename, only applicable if <code>quantized</code> is set.","Quantized filename, only applicable if <code>quantized</code> is set.","Quantized filename, only applicable if <code>quantized</code> is set.","Quantized filename, only applicable if <code>quantized</code> is set.","Quantized filename, only applicable if <code>quantized</code> is set.","Quantized filename, only applicable if <code>quantized</code> is set.","Quantized filename, only applicable if <code>quantized</code> is set.","Quantized filename, only applicable if <code>quantized</code> is set.","Quantized model ID to find the <code>quantized_filename</code>, only …","Quantized model ID to find the <code>quantized_filename</code>, only …","Quantized model ID to find the <code>quantized_filename</code>, only …","Quantized model ID to find the <code>quantized_filename</code>, only …","Quantized model ID to find the <code>quantized_filename</code>, only …","Quantized model ID to find the <code>quantized_filename</code>, only …","Quantized model ID to find the <code>quantized_filename</code>, only …","Quantized model ID to find the <code>quantized_filename</code>, only …","Control the application of repeat penalty for the last n …","Control the application of repeat penalty for the last n …","Control the application of repeat penalty for the last n …","Control the application of repeat penalty for the last n …","Control the application of repeat penalty for the last n …","Control the application of repeat penalty for the last n …","Control the application of repeat penalty for the last n …","Control the application of repeat penalty for the last n …","Control the application of repeat penalty for the last n …","Control the application of repeat penalty for the last n …","Control the application of repeat penalty for the last n …","Control the application of repeat penalty for the last n …","Control the application of repeat penalty for the last n …","Control the application of repeat penalty for the last n …","Control the application of repeat penalty for the last n …","Control the application of repeat penalty for the last n …","Model ID to load the tokenizer from","Model ID to load the tokenizer from","Model ID to load the tokenizer from","Model ID to load the tokenizer from","Model ID to load the tokenizer from","Model ID to load the tokenizer from","Model ID to load the tokenizer from","Model ID to load the tokenizer from","Model ID to load Xlora from","Model ID to load Xlora from","Model ID to load Xlora from","Model ID to load Xlora from","Model ID to load Xlora from","Model ID to load Xlora from","Model ID to load Xlora from","Model ID to load Xlora from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,17,17,11,11,11,17,11,17,0,17,17,11,17,11,17,11,17,11,11,17,11,17,11,17,0,17,11,11,17,11,17,17,0,17,17,17,0,17,17,11,17,11,17,11,17,11,17,11,17,11,17,29,30,31,32,33,34,35,36,37,38,32,34,36,38,39,40,30,41,42,43,29,44,39,40,30,41,42,43,29,44,39,40,30,41,31,42,32,33,34,35,43,29,36,37,44,38,39,40,30,41,42,43,29,44,39,40,30,41,32,34,36,38,39,40,30,41,0,0,26,26,26,26,0,25,26,7,25,26,7,25,26,7,25,26,7,25,0,0,25,26,7,25,26,7,25,26,7,25,26,7,25,26,7,25,26,7,25,26,7,25,26,7,25,26,7,7,7,7,7,7,7,25,7,7,25,25,26,7,7,7,25,26,7,7,7,7,25,26,7,25,26,7,25,26,7,25,26,7],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[[5,[[3,[2]],[3,[4]]]]]],[8,[7]]],9],[[],1],[[],1],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,5],[10,5],[[11,12],13],[-1,-1,[]],[-1,-1,[]],[14,[[16,[11,15]]]],[14,[[16,[17,15]]]],[14,[[16,[11,15]]]],[14,[[16,[17,15]]]],[[[5,[[3,[2]],[3,[4]]]]],18],[[],[[20,[19]]]],[21,22],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[23,[5]]]],0,0,0,0,0,0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[[11,14],[[16,[5,15]]]],[[17,14],[[16,[5,15]]]],[[11,14],[[16,[5,15]]]],[[17,14],[[16,[5,15]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,25],[26,26],[7,7],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[],10],[[],22],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[-1,[[16,[25]]],27],[-1,[[16,[26]]],27],[-1,[[16,[7]]],27],[10,5],[10,5],[10,5],[[25,12],13],[[26,12],13],[[7,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[25,-1],16,28],[[26,-1],16,28],[[7,-1],16,28],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Command",217],[5,"MistralRs",218],[5,"Arc",219],[10,"Conversation",220],[1,"tuple"],[5,"State",221],[5,"ChatCompletionRequest",135],[5,"Json",222],[5,"String",223],[1,"usize"],[6,"ModelSelected",0],[5,"Formatter",224],[8,"Result",224],[5,"ArgMatches",225],[8,"Error",226],[6,"Result",227],[5,"Args",0],[5,"Router",228],[5,"Id",229],[6,"Option",230],[1,"str"],[1,"bool"],[8,"Result",231],[5,"TypeId",232],[5,"Message",135],[6,"StopTokens",135],[10,"Deserializer",233],[10,"Serializer",234],[15,"LlamaGGML",69],[15,"XLoraLlamaGGML",69],[15,"Mistral",69],[15,"XLoraMistral",69],[15,"Gemma",69],[15,"XLoraGemma",69],[15,"Llama",69],[15,"XLoraLlama",69],[15,"Mixtral",69],[15,"XLoraMixtral",69],[15,"XLoraMistralGGUF",69],[15,"XLoraLlamaGGUF",69],[15,"XLoraMixtralGGUF",69],[15,"MistralGGUF",69],[15,"LlamaGGUF",69],[15,"MixtralGGUF",69]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
