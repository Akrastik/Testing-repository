var searchIndex = new Map(JSON.parse('[\
["mistralrs",{"doc":"","t":"FNNNNNNNNNNNNHHNNNOHOCOOOOHNNNNNNFFPPPPGNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOONNNOOONNNNNNNNNNNN","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","from","from_arg_matches","from_arg_matches_mut","get_prompt","get_router","group_id","init","into","log","main","model_id","openai","port","quantized","quantized_filename","quantized_model_id","root","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","ChatCompletionRequest","Message","Multi","MultiId","Single","SingleId","StopTokens","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","content","default_1usize","default_false","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","init","init","init","into","into","into","logit_bias","logprobs","max_tokens","messages","model","n_choices","name","presence_penalty","repetition_penalty","role","stop_seqs","temperature","to_owned","to_owned","to_owned","top_k","top_logprobs","top_p","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"mistralrs"],[33,"mistralrs::openai"],[112,"clap_builder::builder::command"],[113,"clap_builder::parser::matches::arg_matches"],[114,"clap_builder"],[115,"core::result"],[116,"alloc::vec"],[117,"alloc::string"],[118,"mistralrs_core"],[119,"alloc::sync"],[120,"axum::routing"],[121,"clap_builder::util::id"],[122,"core::option"],[123,"anyhow"],[124,"axum::extract::state"],[125,"axum::json"],[126,"core::any"],[127,"serde::de"],[128,"core::fmt"],[129,"core::fmt"]],"d":["","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Log all responses and requests to output.log","","Model ID to load the","","Port to serve on.","Enable quantized.","Quantized filename, only applicable if <code>quantized</code> is set.","Quantized model ID to find the <code>quantized_filename</code>, only …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,0,5,0,5,5,5,5,0,5,5,5,5,5,5,0,0,21,21,21,21,0,8,21,18,8,21,18,8,21,18,8,21,18,8,0,0,8,21,18,8,21,18,8,21,18,8,21,18,8,21,18,8,21,18,8,21,18,8,21,18,8,21,18,18,18,18,18,18,18,8,18,18,8,18,18,8,21,18,18,18,18,8,21,18,8,21,18,8,21,18,8,21,18],"f":[0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,-1,[]],[2,-1,[]],[2,3],[-1,-1,[]],[4,[[7,[5,6]]]],[4,[[7,[5,6]]]],[[[9,[8]]],10],[[[12,[11]]],13],[[],[[15,[14]]]],[[],2],[-1,-2,[],[]],0,[[],[[16,[3]]]],0,0,0,0,0,0,[[[17,[[12,[11]]]],[19,[18]]],10],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,20,[]],[[5,4],[[7,[3,6]]]],[[5,4],[[7,[3,6]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[21,21],[18,18],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,[[],2],[[],22],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,[[7,[8]]],23],[-1,[[7,[21]]],23],[-1,[[7,[18]]],23],[2,3],[2,3],[2,3],[[8,24],25],[[21,24],25],[[18,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Command",112],[1,"usize"],[1,"tuple"],[5,"ArgMatches",113],[5,"Args",0],[8,"Error",114],[6,"Result",115],[5,"Message",33],[5,"Vec",116],[5,"String",117],[5,"MistralRs",118],[5,"Arc",119],[5,"Router",120],[5,"Id",121],[6,"Option",122],[8,"Result",123],[5,"State",124],[5,"ChatCompletionRequest",33],[5,"Json",125],[5,"TypeId",126],[6,"StopTokens",33],[1,"bool"],[10,"Deserializer",127],[5,"Formatter",128],[8,"Result",128]],"b":[]}],\
["mistralrs_core",{"doc":"","t":"PPPPPPKFFFPFGFGPGGMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQQMNNNNNNNNNNNNNNNNNNNNNNQNQQNNNNNNNNNNNNNNNNNNNNONNNNOOOOOOOONNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNN","n":["CacheToken","Done","EnvVar","Error","Fixed","Ids","Loader","MistralLoader","MistralRs","MistralSpecificConfig","Path","Request","Response","SamplingParams","SchedulerMethod","Seqs","StopTokens","TokenSource","_setup_model","_setup_model","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut_refcell","deref_refcell","download_model","download_model","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_mut_arcmutex","get_sender","handle_seq_error","handle_seq_error_stateaware","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","load_model","load_model","max_len","maybe_log_request","maybe_log_response","new","new","presence_penalty","prompt","repeat_last_n","repeat_penalty","response","sampling_params","stop_toks","temperature","to_owned","to_owned","to_owned","top_k","top_n_logprobs","top_p","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_flash_attn","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"mistralrs_core"],[167,"candle_core::dtype"],[168,"core::option"],[169,"candle_core::device"],[170,"std::sync::mutex"],[171,"alloc::boxed"],[172,"anyhow"],[173,"alloc::string"],[174,"core::fmt"],[175,"core::fmt"],[176,"alloc::sync"],[177,"core::result"],[178,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If <code>revision</code> is None, then it defaults to <code>main</code>. If <code>dtype</code> is …","If <code>revision</code> is None, then it defaults to <code>main</code>. If <code>dtype</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[15,27,15,27,23,10,0,0,0,0,15,0,0,0,0,10,0,0,1,8,8,15,16,27,23,19,9,10,11,8,15,16,27,23,19,9,10,11,9,10,11,9,10,11,8,15,16,27,23,19,9,10,11,8,15,16,27,23,19,9,10,11,0,0,1,8,8,15,16,27,23,19,9,10,11,16,10,11,8,15,16,27,23,19,9,10,11,0,19,0,0,8,15,16,27,23,19,9,10,11,8,15,16,27,23,19,9,10,11,1,1,11,19,19,8,19,11,16,9,11,16,16,11,11,9,10,11,11,11,11,8,15,16,27,23,19,9,10,11,8,15,16,27,23,19,9,10,11,8,15,16,27,23,19,9,10,11,9,8,15,16,27,23,19,9,10,11],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,9],[10,10],[11,11],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],0,0,[[1,[3,[14]],15],[[7,[[6,[0]]]]]],[[8,[3,[14]],15],[[7,[[6,[0]]]]]],[13,12],[13,12],[13,12],[13,12],[13,12],[13,12],[13,12],[13,12],[13,12],[[16,17],18],[[10,17],18],[[11,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[19,[[20,[16]]]],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,[3,[14]],15,[3,[2]],4],[[7,[[6,[[5,[0]]]]]]]],[[1,[3,[14]],15,[3,[2]],4],[[7,[[6,[[5,[0]]]]]]]],0,[[[21,[19]],16],12],[[[21,[19]],[12,[0,22]]],12],[[14,9,[3,[14]],[3,[14]]],8],[[[6,[[5,[0]]]],23,24],[[21,[19]]]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[10,"Loader",0],[6,"DType",167],[6,"Option",168],[6,"Device",169],[5,"Mutex",170],[5,"Box",171],[8,"Result",172],[5,"MistralLoader",0],[5,"MistralSpecificConfig",0],[6,"StopTokens",0],[5,"SamplingParams",0],[1,"tuple"],[1,"usize"],[5,"String",173],[6,"TokenSource",0],[5,"Request",0],[5,"Formatter",174],[8,"Result",174],[5,"MistralRs",0],[5,"Sender",175],[5,"Arc",176],[1,"str"],[6,"SchedulerMethod",0],[1,"bool"],[6,"Result",177],[5,"TypeId",178],[6,"Response",0]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
