var searchIndex = new Map(JSON.parse('[\
["mistralrs",{"doc":"","t":"FNNNNHNNNNNNNNHNNNOHOCOOOONNNNNNFFPPPPGNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOONNNOONNNOOONNNNNNNNNNNN","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","chatcompletions","command","command_for_update","deref","deref_mut","drop","from","from_arg_matches","from_arg_matches_mut","get_router","group_id","init","into","log","main","model_id","openai","port","quantized","quantized_filename","quantized_model_id","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","ChatCompletionRequest","Message","Multi","MultiId","Single","SingleId","StopTokens","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","content","default_1usize","default_false","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","init","init","init","into","into","into","logit_bias","logprobs","max_tokens","messages","model","n_choices","name","presence_penalty","repetition_penalty","role","serialize","serialize","serialize","stop_seqs","temperature","to_owned","to_owned","to_owned","top_k","top_logprobs","top_p","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"mistralrs"],[32,"mistralrs::openai"],[114,"clap_builder::builder::command"],[115,"mistralrs_core"],[116,"alloc::sync"],[117,"mistralrs_core::pipeline"],[118,"axum::extract::state"],[119,"axum::json"],[120,"alloc::string"],[121,"clap_builder::parser::matches::arg_matches"],[122,"clap_builder"],[123,"core::result"],[124,"axum::routing"],[125,"clap_builder::util::id"],[126,"core::option"],[127,"anyhow"],[128,"core::any"],[129,"serde::de"],[130,"core::fmt"],[131,"core::fmt"]],"d":["","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Log all responses and requests to output.log","","Model ID to load the","","Port to serve on.","Enable quantized.","Quantized filename, only applicable if <code>quantized</code> is set.","Quantized model ID to find the <code>quantized_filename</code>, only …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,12,12,12,12,0,12,12,12,12,12,12,12,12,0,12,12,12,12,0,12,0,12,12,12,12,12,12,12,12,12,12,0,0,21,21,21,21,0,20,21,7,20,21,7,20,21,7,20,21,7,20,0,0,20,21,7,20,21,7,20,21,7,20,21,7,20,21,7,20,21,7,20,21,7,20,21,7,20,21,7,7,7,7,7,7,7,20,7,7,20,20,21,7,7,7,20,21,7,7,7,7,20,21,7,20,21,7,20,21,7,20,21,7],"f":[0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[[5,[[3,[2]],[3,[4]]]]]],[8,[7]]],9],[[],1],[[],1],[10,-1,[]],[10,-1,[]],[10,5],[-1,-1,[]],[11,[[14,[12,13]]]],[11,[[14,[12,13]]]],[[[5,[[3,[2]],[3,[4]]]]],15],[[],[[17,[16]]]],[[],10],[-1,-2,[],[]],0,[[],[[18,[5]]]],0,0,0,0,0,0,[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,19,[]],[[12,11],[[14,[5,13]]]],[[12,11],[[14,[5,13]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,20],[21,21],[7,7],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[],10],[[],22],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[-1,[[14,[20]]],23],[-1,[[14,[21]]],23],[-1,[[14,[7]]],23],[10,5],[10,5],[10,5],[[20,24],25],[[21,24],25],[[7,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[20,-1],14,26],[[21,-1],14,26],[[7,-1],14,26],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Command",114],[5,"MistralRs",115],[5,"Arc",116],[10,"Conversation",117],[1,"tuple"],[5,"State",118],[5,"ChatCompletionRequest",32],[5,"Json",119],[5,"String",120],[1,"usize"],[5,"ArgMatches",121],[5,"Args",0],[8,"Error",122],[6,"Result",123],[5,"Router",124],[5,"Id",125],[6,"Option",126],[8,"Result",127],[5,"TypeId",128],[5,"Message",32],[6,"StopTokens",32],[1,"bool"],[10,"Deserializer",129],[5,"Formatter",130],[8,"Result",130],[10,"Serializer",131]],"b":[]}],\
["mistralrs_core",{"doc":"","t":"PFKPPPPPKFFFPFGFGPGGMNNNNNNNNNNNNNNNNNNNNNONNNNNNNNONNNNNNNNNNNNNNNNNNNNQQMNNNNNNNNNNNNNNNNNNNNNNNNNQMNQQONNNNNNNNNNNNNNNNNNNNNNONNONNOOOOOOOONOOONNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNN","n":["CacheToken","ChatCompletionResponse","Conversation","Done","EnvVar","Error","Fixed","Ids","Loader","MistralLoader","MistralRs","MistralSpecificConfig","Path","Request","Response","SamplingParams","SchedulerMethod","Seqs","StopTokens","TokenSource","_setup_model","_setup_model","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","choices","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","created","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut_refcell","deref_refcell","download_model","download_model","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_mut_arcmutex","get_prompt","get_sender","handle_seq_error","handle_seq_error_stateaware","id","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","load_model","load_model","max_len","maybe_log_request","maybe_log_response","model","new","new","object","presence_penalty","prompt","repeat_last_n","repeat_penalty","response","return_logprobs","sampling_params","serialize","stop_toks","system_fingerprint","temperature","to_owned","to_owned","to_owned","to_owned","top_k","top_n_logprobs","top_p","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","usage","use_flash_attn","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"mistralrs_core"],[195,"candle_core::dtype"],[196,"core::option"],[197,"candle_core::device"],[198,"std::sync::mutex"],[199,"alloc::boxed"],[200,"alloc::sync"],[201,"anyhow"],[202,"alloc::string"],[203,"core::fmt"],[204,"core::fmt"],[205,"alloc::vec"],[206,"std::sync::mpsc"],[207,"core::result"],[208,"serde::ser"],[209,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If <code>revision</code> is None, then it defaults to <code>main</code>. If <code>dtype</code> is …","If <code>revision</code> is None, then it defaults to <code>main</code>. If <code>dtype</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[18,0,0,31,18,31,26,14,0,0,0,0,18,0,0,0,0,14,0,0,1,11,11,18,19,31,26,24,12,13,14,15,11,18,19,31,26,24,12,13,14,15,13,12,13,14,15,12,13,14,15,13,11,18,19,31,26,24,12,13,14,15,11,18,19,31,26,24,12,13,14,15,0,0,1,11,11,18,19,31,26,24,12,13,14,15,19,13,14,15,11,18,19,31,26,24,12,13,14,15,0,7,24,0,0,13,11,18,19,31,26,24,12,13,14,15,11,18,19,31,26,24,12,13,14,15,1,1,15,24,24,13,11,24,13,15,19,12,15,19,19,19,13,15,13,15,12,13,14,15,15,15,15,11,18,19,31,26,24,12,13,14,15,11,18,19,31,26,24,12,13,14,15,11,18,19,31,26,24,12,13,14,15,13,12,11,18,19,31,26,24,12,13,14,15],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[12,12],[13,13],[14,14],[15,15],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],0,[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],0,0,[[1,[3,[17]],18],[[10,[[6,[0]]]]]],[[11,[3,[17]],18],[[10,[[6,[0]]]]]],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[[19,20],21],[[13,20],21],[[14,20],21],[[15,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[7,[23,[[22,[17,17]]]]],[[10,[17,17]]]],[24,[[25,[19]]]],0,0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,[3,[17]],18,[3,[2]],4],[[10,[[9,[[6,[[5,[0]]]],[8,[7]]]]]]]],[[1,[3,[17]],18,[3,[2]],4],[[10,[[9,[[6,[[5,[0]]]],[8,[7]]]]]]]],0,[[[8,[24]],17],9],[[[8,[24]],13],9],0,[[17,12,[3,[17]],[3,[17]]],11],[[[6,[[5,[0]]]],26,27],[[8,[24]]]],0,0,0,0,0,0,0,0,[[13,-1],28,29],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[10,"Loader",0],[6,"DType",195],[6,"Option",196],[6,"Device",197],[5,"Mutex",198],[5,"Box",199],[10,"Conversation",0],[5,"Arc",200],[1,"tuple"],[8,"Result",201],[5,"MistralLoader",0],[5,"MistralSpecificConfig",0],[5,"ChatCompletionResponse",0],[6,"StopTokens",0],[5,"SamplingParams",0],[1,"usize"],[5,"String",202],[6,"TokenSource",0],[5,"Request",0],[5,"Formatter",203],[8,"Result",203],[5,"HashMap",204],[5,"Vec",205],[5,"MistralRs",0],[5,"Sender",206],[6,"SchedulerMethod",0],[1,"bool"],[6,"Result",207],[10,"Serializer",208],[5,"TypeId",209],[6,"Response",0]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
